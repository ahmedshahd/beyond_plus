scalar DateTime

enum LanguageEnum {
  ARABIC
  ENGLISH
}

type InsuranceCompany {
  id: Int!
  name: String!
  language: LanguageEnum!
  createdAt: DateTime
  updatedAt: DateTime
  parentId: Int
}

type Tpa {
  id: Int!
  name: String!
  language: LanguageEnum!
  createdAt: DateTime
  updatedAt: DateTime
  parentId: Int
}

type Pagination {
  totalItemsCount: Int
  pagesCount: Int
  page: Int
}

type TpaByPagination {
  tpa: [Tpa]!
  pagination: Pagination
}

type InsuranceCompanyByPagination {
  insuranceCompany: [InsuranceCompany]!
  pagination: Pagination
}

input CreateInsuranceCompanyInput {
  name: String!
  parentId: Int
}

input UpdateInsuranceCompanyInput {
  id: Int!
  name: String!
  parentId: Int
}

input CreateTpaInput {
  name: String!
}

input UpdateTpaInput {
  id: Int!
  name: String!
}
type Query {
  listAllTpas(
    language: LanguageEnum!
    search: String
    page: Int
    limit: Int
  ): TpaByPagination!
  listAllInsuranceCompaniesByTpaId(
    tpaId: Int!
    language: LanguageEnum!
    search: String
    page: Int
    limit: Int
  ): InsuranceCompanyByPagination!
}

type Mutation {
  createInsuranceCompany(
    createInsuranceCompanyInput: CreateInsuranceCompanyInput!
    language: LanguageEnum!
  ): InsuranceCompany!
  updateInsuranceCompany(
    updateInsuranceCompanyInput: UpdateInsuranceCompanyInput!
  ): InsuranceCompany!
  removeInsuranceCompany(id: Int!): InsuranceCompany
  createTpa(
    createInsuranceCompanyInput: CreateTpaInput!
    language: LanguageEnum!
  ): InsuranceCompany!
  updateTpa(updateInsuranceCompanyInput: UpdateTpaInput!): InsuranceCompany!
  removeTpa(id: Int!): Tpa
}
