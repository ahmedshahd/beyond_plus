// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum LanguageEnum {
  ARABIC
  ENGLISH
}

model ContactUs {
  id        Int       @id @default(autoincrement())
  name      String
  wbsiteUrl DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model LearnIcon {
  id        Int          @id @default(autoincrement())
  content   String
  language  LanguageEnum @default(ARABIC)
  createdAt DateTime     @default(now())
  updatedAt DateTime?    @updatedAt
}

model PrivacyPolicy {
  id        Int          @id @default(autoincrement())
  text      String
  language  LanguageEnum @default(ARABIC)
  createdAt DateTime     @default(now())
  updatedAt DateTime?    @updatedAt
}

model FAQ {
  id        Int          @id @default(autoincrement())
  question  String
  answers   String[]
  language  LanguageEnum @default(ARABIC)
  createdAt DateTime     @default(now())
  updatedAt DateTime?    @updatedAt
}

model Label {
  id        Int          @id @default(autoincrement())
  name      String
  content   String
  language  LanguageEnum @default(ARABIC)
  createdAt DateTime     @default(now())
  updatedAt DateTime?    @updatedAt
}

model TermsAndConditions {
  id        Int          @id @default(autoincrement())
  text      String
  language  LanguageEnum @default(ARABIC)
  createdAt DateTime     @default(now())
  updatedAt DateTime?    @updatedAt
}

model User {
  id                   Int            @id @default(autoincrement())
  email                String         @unique
  name                 String
  insuranceCompanyName String
  password             String
  mobile               String
  createdAt            DateTime       @default(now())
  updatedAt            DateTime?      @updatedAt
  address              Address[]
  notification         Notification[]
}

model Address {
  id             Int    @id @default(autoincrement())
  userId         Int
  user           User   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  longitude      Float
  latitude       Float
  streetName     String
  buildingNumber Int
  floorNumber    Int
  details        String
  area           String
}

model Notification {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  imageUrl  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  User      User?     @relation(fields: [userId], references: [id])
  userId    Int?
}
